# Generated by Django 2.1.7 on 2019-06-05 05:06

import base.fields
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Model",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.IntegerField()),
                ("last_transaction", models.BigIntegerField()),
                ("status", models.SmallIntegerField()),
                ("type", models.IntegerField()),
                ("optimistic_lock_count", models.IntegerField()),
                ("data", base.fields.JSONField()),
                ("computed", base.fields.JSONField()),
                ("raw", base.fields.JSONField(null=True)),
                ("computed_uri_hash", models.UUIDField(null=True, unique=True)),
                (
                    "computed_search_array",
                    base.fields.ArrayField(base_field=models.BigIntegerField(), null=True, size=None),
                ),
                (
                    "computed_container",
                    models.ForeignKey(
                        db_index=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="computed_elements",
                        to="base.Model",
                    ),
                ),
                (
                    "computed_owner",
                    models.ForeignKey(
                        db_index=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="computed_possessions",
                        to="base.Model",
                    ),
                ),
                (
                    "computed_proprietor",
                    models.ForeignKey(
                        db_index=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="computed_properties",
                        to="base.Model",
                    ),
                ),
            ],
            options={"base_manager_name": "objects"},
        ),
        migrations.CreateModel(
            name="ModelHistory",
            fields=[
                ("history_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("history_transaction", models.BigIntegerField()),
                ("id", models.BigIntegerField()),
                ("status", models.SmallIntegerField()),
                ("version", models.IntegerField()),
                ("last_transaction", models.BigIntegerField()),
                ("type", models.IntegerField()),
                ("optimistic_lock_count", models.IntegerField()),
                ("data", base.fields.JSONField()),
                ("computed", base.fields.JSONField(null=True)),
                ("raw", base.fields.JSONField(null=True)),
                ("computed_uri_hash", models.UUIDField(null=True)),
                ("computed_owner_id", models.BigIntegerField(null=True)),
                ("computed_container_id", models.BigIntegerField(null=True)),
                ("computed_proprietor_id", models.BigIntegerField(null=True)),
                (
                    "computed_search_array",
                    base.fields.ArrayField(base_field=models.BigIntegerField(), null=True, size=None),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(name="modelhistory", unique_together={("id", "history_id")}),
        migrations.CreateModel(name="Actor", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)),
        migrations.CreateModel(name="Blob", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)),
        migrations.CreateModel(
            name="Countable", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)
        ),
        migrations.CreateModel(name="Dummy", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)),
        migrations.CreateModel(
            name="DummyContainer", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)
        ),
        migrations.CreateModel(name="File", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)),
        migrations.CreateModel(
            name="Nothing", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)
        ),
        migrations.CreateModel(
            name="Singleton", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)
        ),
        migrations.CreateModel(name="User", fields=[], options={"proxy": True, "indexes": []}, bases=("base.model",)),
        migrations.AddIndex(
            model_name="model",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["computed_search_array"], name="base_model_compute_1a2b6c_gin"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="model",
            unique_together={
                ("status", "type", "id"),
                ("computed_proprietor", "status", "type", "id"),
                ("computed_container", "status", "type", "id"),
                ("computed_owner", "status", "type", "id"),
            },
        ),
        migrations.CreateModel(
            name="DummyActor", fields=[], options={"proxy": True, "indexes": []}, bases=("base.actor",)
        ),
        migrations.CreateModel(
            name="DummyContainer2", fields=[], options={"proxy": True, "indexes": []}, bases=("base.dummycontainer",)
        ),
        migrations.CreateModel(
            name="SingletonDummy", fields=[], options={"proxy": True, "indexes": []}, bases=("base.singleton",)
        ),
        migrations.CreateModel(
            name="SubDummy", fields=[], options={"proxy": True, "indexes": []}, bases=("base.dummy",)
        ),
    ]
